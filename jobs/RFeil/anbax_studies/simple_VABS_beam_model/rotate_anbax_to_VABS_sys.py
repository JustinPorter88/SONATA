
import numpy as np
import matplotlib.pyplot as plt



def trsf_sixbysix(M, T):
    """
    Transform six-by-six compliance/stiffness matrix.
    change of reference frame in engineering (or Voigt) notation.

    Parameters
    ----------
    M : np.ndarray
        6x6 Siffness or Mass Matrix
    T : np.ndarray
        Transformation Matrix

    Returns
    ----------
    res : np.ndarray
        Transformed 6x6 matrix
    """

    TS_1 = np.dot(np.dot(T.T, M[0:3, 0:3]), T)
    TS_2 = np.dot(np.dot(T.T, M[3:6, 0:3]), T)
    TS_3 = np.dot(np.dot(T.T, M[0:3, 3:6]), T)
    TS_4 = np.dot(np.dot(T.T, M[3:6, 3:6]), T)

    tmp_1 = np.vstack((TS_1, TS_2))
    tmp_2 = np.vstack((TS_3, TS_4))
    res = np.hstack((tmp_1, tmp_2))
    return res


if __name__ == "__main__":

    # # Theta = 0 & Phi = 0
    # tmp_TS = np.asarray([[5.9991573069517260e+09, 2.1263832886241041e-08, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, -4.5002685785214542e-10],
    # [1.3990359576897235e-08, 5.9991573069517269e+09, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, -4.7461024917538123e-07],
    # [0.0000000000000000e+00, 0.0000000000000000e+00, 1.4200000000000009e+11, -3.8481923752434786e-06, -1.8553903452148288e-06, 0.0000000000000000e+00],
    # [0.0000000000000000e+00, 0.0000000000000000e+00, -3.7644642713094264e-06, 1.1953137873628834e+10, 1.0269496867157999e-06, 0.0000000000000000e+00],
    # [0.0000000000000000e+00, 0.0000000000000000e+00, -1.8936369571434091e-06, 9.9709092641345125e-07, 1.1953137873628830e+10, 0.0000000000000000e+00],
    # [1.1765527251571073e-07, -2.3529056993270213e-07, 0.0000000000000000e+00, 0.0000000000000000e+00, 0.0000000000000000e+00, 1.0000000000000000e+09]])

    # # Theta = 20 & Phi = 0
    # tmp_TS = np.asarray([[1.8665507711677666e+10, -1.7991169897435700e-06, 3.6343406927528458e+10, -3.1402258316815212e-06, -2.3824263485335030e-07, 9.7089559918914787e-07],
    # [-4.5547270029918388e-07, 4.2581914744134469e+09, 3.9077788767531488e-07, 1.6961188858315657e-06, -7.0399444883934838e-07, -6.9689175602200889e-07],
    # [3.6343406927528465e+10, -3.6244556771631655e-06, 1.1301756420831413e+11, 2.5075727446633282e-06, -8.2999001771031790e-07, 1.2063845154221026e-06],
    # [-7.9454377663470765e-08, 1.7054932195261867e-06, -6.4514892398103484e-06, 4.9074898962374754e+09, 2.8400575894414574e-06, -1.3700619339296911e+09],
    # [-2.1944733011775746e-07, -8.5006764815738135e-07, 1.3969206503477272e-06, 6.2348862286036340e-07, 9.5984854316474304e+09, -8.5404255786772946e-08],
    # [3.9867252209006004e-07, -6.5253223820617592e-07, -8.8724191144348956e-07, -1.3700619339296911e+09, -3.4699745691873149e-07, 1.4584342404042993e+09]])

    # # Theta = 45 & Phi = 0
    # tmp_TS = np.asarray([[3.3797697596645603e+10, 2.1232096120700750e-06, 2.9166033299488342e+10, -2.7423216329831275e-06, 1.8967262632060002e-06, 2.7255992074050579e-06],
    # [1.0222775317360778e-06, 4.2230279890429316e+09, 3.7515209457909246e-08, 2.2601615633664815e-07, 8.2927383706897761e-07, -5.1621399771910713e-07],
    # [2.9166033299488335e+10, 2.0405722675138126e-07, 3.9900737996798149e+10, -3.8787538193559261e-06, 2.6358827424628678e-06, 1.1290641641377281e-06],
    # [-3.4088577705094391e-06, -1.5883917306252392e-07, -3.9292469253787299e-06, 1.5048772178236759e+09, 3.0402684247335063e-07, -5.0658232906668180e+08],
    # [1.9319341559145608e-07, 5.9582663916131768e-07, 7.0090288086538974e-07, -3.9574902583324695e-08, 3.8485859064235263e+09, 7.6029855419647829e-07],
    # [4.6234304690778245e-06, 3.5969865129711671e-08, 2.1893914935288676e-06, -5.0658232906668192e+08, 3.7404347508892727e-07, 1.3829602054327853e+09]])

    # # Theta = 90 & Phi = 0
    # tmp_TS = np.asarray([[5.9177812655841017e+09, 3.2331705409542119e-07, 1.4837805787250641e-07, 4.9007184624058241e-23, -8.8604131031956524e-24, 1.1903325316743620e-07],
    # [1.3920377547959099e-07, 4.7989797917536755e+09, 7.1712077447908363e-24, -3.6263944493920539e-24, 5.5836070931104191e-24, -2.7405659973009333e-07],
    # [1.4837805787250643e-07, 2.3817624347335588e-23, 9.8000000000000019e+09, 1.2323067366227450e-07, -3.4390231699446119e-07, -2.4319339241476839e-23],
    # [4.1877899578958657e-23, 3.0416383596100253e-25, 1.8801736789276006e-07, 9.2388568945480609e+08, -1.9908728611700912e-08, -6.8069333485770976e-09],
    # [-8.1630614958496606e-24, 3.3562241663063237e-24, 3.4271302569098570e-07, -3.4158886575642636e-08, 8.6131389800810611e+08, -1.6605909589557123e-24],
    # [1.0747067380493717e-07, -1.5795397102966729e-07, -1.7818665817931039e-23, -6.8069333485771009e-09, -1.9169267528164419e-25, 8.8888888888888907e+08]])

    # Theta = 180 & Phi = 0
    tmp_TS = np.asarray([[5.9991573069517241e+09, 2.0359230419427651e-08, -1.5673531493702924e-05, 2.2558676078691722e-24, 1.0251528641497306e-22, 5.9379892952817712e-08],
    [-2.2713833134222261e-07, 5.9991573069517269e+09, -1.2706627647893882e-21, 5.8211968699306238e-22, -4.3326210271702641e-22, -4.7457847530756669e-07],
    [-1.5673531493702924e-05, -1.0644773007947667e-21, 1.4200000000000009e+11, -3.8538535508919612e-06, -1.8553903452148288e-06, -4.8461548012065501e-22],
    [-4.1073158174009809e-22, 2.5365554593054857e-22, -3.7757866226063908e-06, 1.1953137873628834e+10, 1.0269742735777614e-06, 1.2962643017440968e-06],
    [3.1729658409042287e-22, -2.1429891011002594e-22, -1.8936369571434091e-06, 9.9710321984443179e-07, 1.1953137873628830e+10, 4.3635594909708838e-24],
    [1.1765527251571070e-07, -2.3525879606488754e-07, -3.1320769331551634e-22, 1.2962643017440970e-06, 1.9618969556632480e-24, 1.0000000000000000e+09]])

    B = np.array([[0, 0, 1], [1, 0, 0], [0, 1, 0]])
    T = np.dot(np.identity(3), np.linalg.inv(B))

    TS = trsf_sixbysix(tmp_TS, T)
    np.set_printoptions(precision=4)
    print(TS)

    # EOF